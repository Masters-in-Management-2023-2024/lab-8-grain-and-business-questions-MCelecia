# -*- coding: utf-8 -*-
"""mc3102_Lab#8

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14Ap1G27giy-ozNMCYqRskWBuuGOT3JkG

# Diamond Company Analytics Challenge

**Time:** 35 minutes

**Scenario:** You are the new data analyst at a prestigious diamond company. The CEO has called an urgent meeting and needs answers to critical business questions about the inventory.

**Your Mission:** Analyze the diamond inventory data and provide insights to guide strategic decisions.
"""

import polars as pl

# Load the diamonds dataset
print("Loading diamonds dataset...")
df = pl.read_csv('https://raw.githubusercontent.com/pycaret/pycaret/master/datasets/diamond.csv')
print("Dataset loaded successfully!")

"""## Section 1: Initial Inventory Assessment (5 minutes)

The CEO walks in: "Before we dive into specifics, I need to understand what we're working with. Give me the basics about our inventory database."

### Question 1: "How extensive is our inventory database?"

The CEO needs to know the scale of data you're analyzing.
"""

# Your code here
print(f"Shape: {df.shape}")
df.head()

"""### Question 2: "What information do we track about each diamond?"

List all the characteristics we record.
"""

# Your code here:
print(f"Columns: {df.columns}")

"""### Question 3: "When I look at one line in this database, what am I looking at?"

Explain in business terms:

**Your answer:** Each row represents:
"""

# Your code here:
print("\nEach row represents: One Diamond")
print("This is our current grain: diamond-level Data")

"""## Section 2: Strategic Business Questions (20 minutes)

The CEO continues: "Now let's get to the important questions. Our board meeting is tomorrow and I need concrete numbers."

### Question 4: "We're considering expanding our storage facilities. How many total carats do we have in inventory? I need to know if our vaults can handle the weight."

Think about what measurement would help answer this.
"""

# Your code here:
count = len(df)
print(f"Total number of diamonds: {count}")
avg_carat = df["Carat Weight"].mean()
print(f"Average carat weight: {avg_carat}")
count * avg_carat
print(f"Total weight of diamonds (in carats): {count * avg_carat}")

"""### Question 5: "Our new marketing campaign claims we have 'the widest variety of cuts in the industry.' Can you verify this?"

The CEO wants to know about variety, not quantity.
"""

# Your code here:
unique_count = df.select(pl.col("Cut").n_unique())
print(f"Number of unique cuts: {unique_count}")

"""### Question 6: "I'm meeting with our insurance company. They need to know our price exposure - what's our most and least valuable diamond?"
"""

# Your code here:
max_price = df["Price"].max()
min_price = df["Price"].min()
print(f"Most valuable diamond: ${max_price:,.2f}")
print(f"Least valuable diamond: ${min_price:,.2f}")

"""### Question 7: "Which color grades should we focus on in our premium line? I need typical prices across our color spectrum."

The CEO wants to understand pricing patterns.
"""

# Your code here:
Color_price = df.group_by("Color").agg(pl.col("Price").mean())
print(Color_price)

"""**Reflection:** After analyzing by color, how has your view of the data changed? What does each row in your result represent now?

**Your answer:** New grain =

## Section 3: Advanced Strategic Analysis (10 minutes)

The CEO leans forward: "These next questions will shape our strategy for next year."

### Question 8: "We're thinking of specializing in certain clarity grades. For our investor deck, I need a complete breakdown showing: how many diamonds we have in each clarity grade, their typical price, and the total carats we're holding for each grade."
"""

# Your code here:
result = df.group_by("Clarity").agg(
    pl.col("Price").mean(),
    pl.col("Carat Weight").sum(),
    pl.count().alias("Count"))
print(result)

"""### Question 9: "My luxury competitor claims they have the best prices for every cut-color combination. Show me our pricing structure across these combinations - I want to see where we're competitive."
"""

# Your code here:
Competitive = df.group_by(["Cut", "Color"]).agg(
    pl.col("Price").mean().alias("avg_price"),
    pl.len().alias("count"),
).sort (["Cut", "Color"])
print(Competitive.head(10))

"""**Reflection:** How specific is your analysis now? What level of detail does each row represent?

**Your answer:** New grain = The average price of the diamonds based on cut and color

### Question 10: URGENT - "Our biggest client is interested in purchasing entire inventory segments. They asked: 'Which color-cut combinations represent your highest total inventory value?' Show me the top 5 most valuable inventory segments by total worth, and include how many diamonds are in each segment."

This is critical for tomorrow's negotiation.
"""

# Your code here:
top_five = df.with_columns(
    total_value = pl.col("Carat Weight") * pl.col("Price")
).group_by(["Color", "Cut"]).agg(
    pl.col("total_value").sum().alias("total_inventory_value"),
    pl.len().alias("count")
).sort("total_inventory_value", descending=True)

print(top_five.head())

"""## Debrief

Congratulations! You've just completed your first day as the diamond company's data analyst.

Remember:
- CEOs speak in business language, not technical terms
- Always understand what each row represents before analyzing
- Business questions contain clues about which operations to use
"""